# Copyright 2020 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

# Build toolchain and run regression checks
name: CI
on:
  push:
    paths:
      - '.github/workflows/ci.yml'
      - 'llvm/**'
      - 'clang/**'
      - 'lld/**'
  pull_request:
    paths:
      - '.github/workflows/ci.yml'
      - 'llvm/**'
      - 'clang/**'
      - 'lld/**'

jobs:
  build_llvm:
    name: Build and Test LLVM
    runs-on: ubuntu-20.04
    env:
      BUILDPREFIX: build
      INSTALLPREFIX: install
      LLVMSRC: llvm-project
      NEWLIBSRC: newlib
    steps:
      ########################################
      ## Checkout
      ########################################
      # This
      - name: Checkout LLVM
        uses: actions/checkout@v2
        with:
          path: ${{ env.LLVMSRC }}
      # NEWLIB
      - name: Checkout newlib
        run: |
          git clone --depth 1 -b newlib-3.3.0 https://sourceware.org/git/newlib-cygwin.git ${NEWLIBSRC}
          echo BUILDPREFIX=${BUILDPREFIX}
          echo INSTALLPREFIX=${INSTALLPREFIX}
          echo LLVMSRC=${LLVMSRC}
          echo NEWLIBSRC=${NEWLIBSRC}
          echo $(pwd)
          ls -al
      ########################################
      ## Prep OS
      ########################################
      # apt
      - name: Install Packages
        run: |
          sudo apt-get -y update && sudo apt-get install -y git flex bison build-essential \
            git python python3 python3-distutils texinfo wget libexpat-dev \
            ninja-build
      # cmake
      - name: Install cmake
        run: |
          mkdir -p /tmp/cmake && cd /tmp/cmake
          wget https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz
          tar xf cmake-3.18.4.tar.gz && cd cmake-3.18.4
          ./bootstrap -- -DCMAKE_USE_OPENSSL=OFF
          make -j$(nproc) && sudo make install
          cd /tmp && rm -rf cmake
      ########################################
      ## Build
      ########################################
      # LLVM
      - name: Build LLVM
        run: |
          mkdir -p ${BUILDPREFIX}/llvm
          cd ${BUILDPREFIX}/llvm
          cmake \
            -DCMAKE_BUILD_TYPE="Release" \
            -DCMAKE_INSTALL_PREFIX=${INSTALLPREFIX} \
            -DLLVM_ENABLE_PROJECTS="clang;lld" \
            -DLLVM_TARGETS_TO_BUILD="RISCV" \
            -DLLVM_DEFAULT_TARGET_TRIPLE="riscv32-unknown-elf" \
            -G Ninja ${GITHUB_WORKSPACE}/${LLVMSRC}/llvm
          ninja
          ninja install


      
